作业编号
　　上机作业6：Huffman树、堆

问题描述
　　A有一段文章想通过一根二进制传输线传给B。由于文章太长，A将其每个字符出现的次数统计了出来，并想将每个字符编码成一串二级制数字（只含0/1），当然要求是没有一个字符的编码串是另一个字符的前缀（这样就能保证传输过去的数据解码的唯一性）。现在请你算出A这段文章传输过去需要至少几个二进制位。
　　B得到A的文章后，如果心情好，会选择将其内容进行修改，然后通过一根二进制线发给C。B修改A的文章的操作有：
　　1.将当前文章中出现次数最多的一个字符全部删去，因为他觉得这个字符出现太多了烦；
　　2.将当前文章中出现次数最少的一个字符全部删去，因为他觉得这个字符删掉基本无所谓留着烦；
　　3.在文章中加入一个新字符F次，因为他觉得这个字符能让他心情更好。
　　而B也想知道他的文章传输过去需要至少几个二进制位。

输入格式
　　第一行一个正整数N，表示A的文章中不同字符的个数。
　　之后N行每行一个正整数，描述了A的文章中每个字符出现的次数。
　　接着一行一个字符串"GOOD"或"BAD"，表示B的心情好不好。
　　如果心情是"BAD"，则后面没有其他输入。
　　如果心情是"GOOD"，则之后一行有一个正整数Q，表示B对A的文章进行的操作数。接下来Q行，每行可能是：
　　1.字符'D'，表示删去当前文章中出现最多的一个字符；
　　2.字符'E'，表示删去当前文章中出现最少的一个字符；
　　3.字符'A'和一个正整数F，表示加入一个新字符F次。
　　数据保证合法性。

输出格式
　　第一行输出A想知道的答案。
　　如果B心情好，第二行输出B想知道的答案。

样例输入
5
6
7
8
10
11
GOOD
6
D
D
A 9
A 4
E
E

样例输出
97
39

样例说明
　　A传给B的文章中，每个字符分别被编码成：
　　000
　　001
　　10
　　11
　　01
　　则这样总共需要6*3+7*3+8*2+10*2+11*2=97个二进制位。
　　B传给C的文章中，每个字符分别出现的次数为：
　　7
　　8
　　9
　　分别编码成：
　　10
　　11
　　0
　　则这样总共需要7*2+8*2+9=39个二进制位。

数据规模和约定
　　80%的数据，B心情不好。
　　100%的数据，N,Q≤100000，所有字符出现次数≤100000。

注意事项
　　请使用64位整型变量。
